filetype off                              " required

call plug#begin('~/.vim/plugged')

Plug 'tomtom/tcomment_vim'                " Commenting grids
Plug 'airblade/vim-gitgutter'
Plug 'dense-analysis/ale'
Plug 'majutsushi/tagbar'
Plug 'ervandew/supertab'
Plug 'bling/vim-airline'                  " Status bar
Plug 'maralla/completor.vim'
Plug 'flazz/vim-colorschemes'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree'

call plug#end()
filetype plugin indent on                 " required

colorscheme night                         " also have used: night, molokai, afterglow, peaksea
syntax enable                             " enable syntax processing-

set nocompatible                          " vundle requires vim not to be compatible with vi
set tabstop=2                             " number of visual spaces per tab
set softtabstop=2                         " number of spaces in tab when editing
set expandtab                             " tabs are spaces
set shiftwidth=2
set encoding=utf-8
set scrolloff=3
set autochdir
set tags^=.git/tags;~
set modelines=0                           " prevents secutiry exploits having to do with modelines
set smartindent                           " tries to do the right thing
set showmode
set showcmd                               " show command in bottom bar
set hidden
set wildmenu                              " visual auto-complete for command menu
set wildmode=list:longest
set lazyredraw                            " redraw only when we need to.
set visualbell
set ttyfast                               " improve smoothness of redrawing
set ruler                                 " show line and column number of cursor position
set backspace=indent,eol,start
set laststatus=2
set relativenumber                        " show line number relative to current position
set number                                " show line number
set wrap
set textwidth=79
set formatoptions=qrn1
set ignorecase
set smartcase
set gdefault                              " apply substitution globally to all lines
set showmatch                             " highlight matching [{()}]
set incsearch                             " search as characters are entered
set hlsearch                              " highlight matches
set foldenable                            " enable folding
set foldlevelstart=10                     " open most folds by default
set foldmethod=indent

set noshowmode                            " hide the INSERT mode

" The next few lines are to move backup files to the tmp folder
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

au FocusLost * :wa " save file when losing focus of editor

" airline settings
" enable display buffers when there's only one tab open
let g:airline#extensions#tabline#enabled = 1

let mapleader=","  " leader is comma

nnoremap <C-l> :bnext<CR>
nnoremap <C-h> :bprevious<CR>
nnoremap j gj
nnoremap k gk
nnoremap ; :
nnoremap <tab> %
nnoremap / /\v
nnoremap <space> za " space open/closes folds
nnoremap <leader><space> :noh<cr> " turn off search highlight
nnoremap <Leader>rtw :%s/\s\+$//e<CR>
nnoremap <silent> <Leader>rts :call TrimWhiteSpace()<CR>

vnoremap <tab> %
vnoremap / /\v
inoremap jj <Esc>
inoremap <C> <ESC>

" functions
" removes trailing spaces
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction

" on write triggers
autocmd FileWritePre    * :call TrimWhiteSpace()
autocmd FileAppendPre   * :call TrimWhiteSpace()
autocmd FilterWritePre  * :call TrimWhiteSpace()
autocmd BufWritePre     * :call TrimWhiteSpace()

" cursor line
:hi CursorLine   cterm=NONE ctermbg=lightblue ctermfg=white guibg=darkred guifg=white
:hi CursorColumn cterm=NONE ctermbg=lightblue ctermfg=white guibg=lightblue guifg=white
:nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>

" set paste / set nopaste
:nnoremap <Leader>p :set paste<CR>
:nnoremap <Leader>n :set nopaste<CR>

setl indentkeys=0{,0},0),!^F,o,O,e,=case,<CR>

" ctrlp settings
let g:ctrlp_map = '<c-p>'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn|data|node_modules|airflow)$',
  \ 'file': '\v\.(exe|so|dll|csv|*)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

" other indentationsd *.js, *.html, *.css
" au BufNewFile,BufRead *.js, *.html, *.css
"     \ set tabstop=2
"     \ set softtabstop=2
"     \ set shiftwidth=2
"
" "" python specific pep8 indentation
" au BufNewFile,BufRead *.py
"     \ set tabstop=4
"     \ set softtabstop=4
"     \ set shiftwidth=4
"     \ set textwidth=79
"     \ set expandtab
"     \ set autoindent
"     \ set fileformat=unix
" let python_highlight_all=1
hi pythonSelf  ctermfg=68  guifg=#5f87d7 cterm=bold gui=bold


" nertree config
"autocmd vimenter * NERDTree
"map <F3> :NERDTreeToggle<CR>
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\.vim$', '\~$', '\.pyc$', '\.swp$']
let NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$',  '\~$']
let NERDTreeShowBookmarks=1
let NERDTreeQuitOnOpen = 1 " autoclose when you open a file
" make it a bit prettie
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
nnoremap <Leader>f :NERDTreeToggle<Enter>


" completor.vim
let g:completor_python_binary = "/Library/Frameworks/Python.framework/Versions/3.6/bin/python3"
let g:completor_auto_trigger = 0
" inoremap <expr> <S-Tab> pumvisible() ? "<C-N>" : "<C-R>=completor#do('complete')<CR>"
